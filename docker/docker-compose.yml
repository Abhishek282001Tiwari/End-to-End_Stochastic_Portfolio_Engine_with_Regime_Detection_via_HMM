version: '3.8'

services:
  portfolio-engine:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: portfolio-engine
    ports:
      - "8050:8050"
    environment:
      - PYTHONPATH=/app
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://postgres:portfolio123@postgres:5432/portfolio_db
      - ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY}
      - QUANDL_API_KEY=${QUANDL_API_KEY}
    volumes:
      - ../data:/app/data
      - ../reports:/app/reports
      - ../logs:/app/logs
      - ../config:/app/config
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    networks:
      - portfolio-network

  redis:
    image: redis:7-alpine
    container_name: portfolio-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - portfolio-network

  postgres:
    image: postgres:14-alpine
    container_name: portfolio-postgres
    environment:
      - POSTGRES_DB=portfolio_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=portfolio123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../sql:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - portfolio-network

  nginx:
    image: nginx:alpine
    container_name: portfolio-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ../ssl:/etc/nginx/ssl:ro
    depends_on:
      - portfolio-engine
    restart: unless-stopped
    networks:
      - portfolio-network

  prometheus:
    image: prom/prometheus:latest
    container_name: portfolio-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - portfolio-network

  grafana:
    image: grafana/grafana:latest
    container_name: portfolio-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - portfolio-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: portfolio-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - portfolio-network

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  portfolio-network:
    driver: bridge