# Docker Compose configuration for Stochastic Portfolio Engine
version: '3.8'

services:
  portfolio-engine:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stochastic-portfolio-engine
    ports:
      - "8501:8501"
    environment:
      - PYTHONPATH=/app
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      # Add API keys as environment variables
      - ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY:-}
      - POLYGON_API_KEY=${POLYGON_API_KEY:-}
      - QUANDL_API_KEY=${QUANDL_API_KEY:-}
      - BLOOMBERG_API_KEY=${BLOOMBERG_API_KEY:-}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      # Mount config for easy updates
      - ./config:/app/config
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - portfolio-network

  # Optional: Add Redis for caching
  redis:
    image: redis:7-alpine
    container_name: portfolio-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - portfolio-network
    command: redis-server --appendonly yes

  # Optional: Add PostgreSQL for data storage
  postgres:
    image: postgres:15-alpine
    container_name: portfolio-postgres
    environment:
      - POSTGRES_DB=portfolio_db
      - POSTGRES_USER=portfolio_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-portfolio_pass}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - portfolio-network

networks:
  portfolio-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
  postgres-data:
    driver: local